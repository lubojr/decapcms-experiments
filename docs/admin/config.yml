backend:
  name: github
  branch: main
  repo: ESA-EarthCODE/open-science-catalog-metadata-testing
  base_url: https://decap-cms-oauth-two.vercel.app
  open_authoring: true
  squash_merges: true
publish_mode: editorial_workflow
site_url: https://decapcms-experiments.vercel.app/
logo_url: https://brand-core-eox-hub-eoxhub-portal-24023d6fe5cc3afbba8510c6d5f0ab.pages.eox.at/assets/img/eoxhub.svg
media_folder: docs/media
public_folder: "/media"
search: false
collections:
  - name: "osc-eo-mission"  # Used in URLs
    label: "EO Missions"  # Used in the UI
    folder: "eo-missions"  # The path to the post markdown files
    nested:
      depth: 100 # max depth to show in the collection tree
      summary: '{{title}}' # optional summary for a tree node, defaults to the inferred title field
    format: "json"
    create: true  # Allow users to create new documents
    slug: "{{slug}}"
    fields:  # The fields each document in this collection will have
      - {label: "ID", name: "id", widget: "string", pattern: ['.{3,}', "Must have at least 3 characters"]}
      - {label: "title", name: "title", widget: "string"}
      - { label: Description, name: description, widget: "markdown" }
  - name: "osc-products"  # Used in URLs
    label: "Products"  # Used in the UI
    folder: "products"  # The path to the post markdown files
    nested:
      depth: 100 # max depth to show in the collection tree
      summary: '{{title}}' # optional summary for a tree node, defaults to the inferred title field
    format: "json"
    create: true  # Allow users to create new documents
    slug: "{{slug}}"
    fields:  # The fields each document in this collection will have
      - {label: "ID", name: "id", widget: "string", pattern: ['.{3,}', "Must have at least 3 characters"]}
      - {label: "title", name: "title", widget: "string"}
      - { label: Description, name: description, widget: "markdown" }
  - name: "osc-project"  # Used in URLs
    label: "Projects"  # Used in the UI
    folder: "projects"  # The path to the post markdown files
    nested:
      depth: 100 # max depth to show in the collection tree
      summary: '{{title}}' # optional summary for a tree node, defaults to the inferred title field
    format: "json"
    create: true  # Allow users to create new documents
    slug: "{{slug}}"
    fields:  # The fields each document in this collection will have
      - {label: "ID", name: "id", widget: "string", pattern: ['.{3,}', "Must have at least 3 characters"]}
      - {label: "title", name: "title", widget: "string"}
      - { label: Description, name: description, widget: "markdown" }
      - { label: Status, name: osc:status, widget: text }
      - { label: Themes, name: osc:themes, widget: select, options: ["Atmosphere", "Cryosphere", "Land", "Magnetosphere_Ionosphere", "Oceans", "Solid Earth"], multiple: true, min: 1 }
  - name: "osc-themes"  # Used in URLs
    label: "Themes"  # Used in the UI
    folder: "themes"  # The path to the post markdown files
    nested:
      depth: 100 # max depth to show in the collection tree
      summary: '{{title}}' # optional summary for a tree node, defaults to the inferred title field
    format: "json"
    create: true  # Allow users to create new documents
    slug: "{{slug}}"
    fields:  # The fields each document in this collection will have
      - {label: "ID", name: "id", widget: "string", pattern: ['.{3,}', "Must have at least 3 characters"]}
      - {label: "title", name: "title", widget: "string"}
      - { label: Description, name: description, widget: "markdown" }
  - name: "osc-variables"  # Used in URLs
    label: "Variables"  # Used in the UI
    folder: "variables"  # The path to the post markdown files
    nested:
      depth: 100 # max depth to show in the collection tree
      summary: '{{title}}' # optional summary for a tree node, defaults to the inferred title field
    format: "json"
    create: true  # Allow users to create new documents
    slug: "{{slug}}"
    fields:  # The fields each document in this collection will have
      - {label: "ID", name: "id", widget: "string", pattern: ['.{3,}', "Must have at least 3 characters"]}
      - {label: "title", name: "title", widget: "string"}
      - { label: Description, name: description, widget: "markdown" }
      
